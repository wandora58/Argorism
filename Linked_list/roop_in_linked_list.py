# 連結リストの中にループがあるか
#
# ウサギとカメのアルゴリズム
#
# 循環に入るまでの長さを r
# 循環部分の長さを m とする
#
# 012345678678678678
#
# 1つずつ増えるインデックスと、2つずつ増えるインデックスの2種類を用意
#
# a = 0 a += 1  0 1 2 3 4 5 6
# b = 0 b += 2  0 2 4 6 8 7 6 ループがあるなら必ず出会う(この時出会った距離を m とする)
#
# b を初期位置に戻して今度は1ずつ進める
#
# a = 0 a += 1  0 1 2 3 4 5 6 7 8 6 7 8 6 　
# b = 0 b += 1                1 2 3 4 5 6 ループの開始位置で出会う(この時 b が進んだ距離が r)
#
# 出会ったら b を今度は2ずつ進める
#
# a = 0 a += 1  0 1 2 3 4 5 6 7 8 6 7 8 6 7 8 6
# b = 0 b += 2                            8 7 6 また出会う(この時進んだ距離が m)

if __name__ == "__main__":

    l = '012345678678678678678678'

    a = 0
    b = 0

    while True:
        a += 1
        b += 2

        if b >= len(l):
            print("False")

        if l[a] == l[b]:
            break

    b = 0

    while True:
        a += 1
        b += 1

        if l[a] == l[b]:
            tmp = a
            print("till_circle:",b)
            break

    while True:
        a += 1
        b += 2

        if l[a] == l[b]:
            print("len_circle:",a-tmp)
            break
